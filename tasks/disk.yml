---
  - name: (iostat) Install checks
    become: True
    apt:
      name:
        - check-iostat
      state: present
    when: not mon_skip_iostat

  - name: (smart|sas-smart) Install checks
    become: True
    apt:
      name:
        - check-smartvalues
        - check-sas-smart
      state: present
    when: not mon_skip_smart

  - name: Load physical disks in this system (by path)
    when: not mon_disks_use_uuid|bool
    set_fact:
      pdisks: "{{ ansible_devices|attr_not_matching('removable', '^1')|keys|matching('[sva]d[a-z]')|prepend('/dev/')|difference(mon_icinga_blacklist) }}"

  - name: Load physical disks in this system (by uuid)
    when: mon_disks_use_uuid|bool
    set_fact:
      pdisks: "{{ ansible_devices|attr_not_matching('removable', '^1')|keys|matching('[sva]d[a-z]')|map('extract', ansible_devices, 'links')|map(attribute='ids')|first_sub|prepend('/dev/disk/by-id/')|difference(mon_icinga_blacklist_ids) }}"

  - name: (disk) Detect mounted volumes
    set_fact:
      disk_item: "disk {{ item.mount }}"
    with_items: "{{ ansible_mounts|attr_in('mount', mon_icinga_valid_mounts) }}"
    register: diskappend

  - name: (disk) Append detected mountpoints to list of checks
    set_fact: mon_icinga_checks="{{mon_icinga_checks}} + {{ diskappend.results | map(attribute='ansible_facts.disk_item') | list | sort }}"

  - name: (iostat) Enumerate physical disks in this system
    when: not mon_skip_iostat
    set_fact:
      disk_item: "iostat {{ item }}"
    with_items: "{{ pdisks }}"
    register: pdiskappend

  - name: (iostat) Append detected disks to list of checks
    when: not mon_skip_iostat
    set_fact: mon_icinga_checks='{{mon_icinga_checks}} + {{ pdiskappend.results | map(attribute="ansible_facts.disk_item") | list | sort }}'

  - name: (smart) Remove tempfile
    become: True
    when: not mon_skip_smart
    file: path=/tmp/disks state=absent

  - name: (smart) Match installed HDDs/SSDs against database
    become: True
    when: not mon_skip_smart
    shell: >
      /usr/lib/nagios/plugins/check_smartvalues
      -db /etc/icinga2/check_smartvalues.db.json
      -c /etc/icinga2/check_smartvalues.cfg.json
      -pd -d {{ item }} | head -n1 | grep -P "^UNKNOWN" ||
      (echo "{{ item }}" >> /tmp/disks)
    with_items: "{{ pdisks }}"
    changed_when: False
    failed_when: False
    check_mode: False

  - name: (smart) Check if we detected any disks
    become: True
    when: not mon_skip_smart
    stat: path=/tmp/disks
    register: diskstat
    check_mode: False

  - name: (smart) Load detection result
    become: True
    when: not mon_skip_smart and diskstat.stat.exists
    shell: cat /tmp/disks
    register: disks
    changed_when: False
    check_mode: False

  - name: (smart) Detect disks
    when: not mon_skip_smart and diskstat.stat.exists
    set_fact:
      smart_item: "smart {{ item }}"
    with_items: "{{ disks.stdout_lines }}"
    register: smartappend

  - name: (smart) Remove tempfile
    become: True
    when: not mon_skip_smart
    file: path=/tmp/disks state=absent
    changed_when: False
    check_mode: False

  - name: (smart) Append detected disks to list of checks
    when: not mon_skip_smart and diskstat.stat.exists
    set_fact: mon_icinga_checks="{{ mon_icinga_checks }} + {{ smartappend.results | map(attribute='ansible_facts.smart_item') | list | sort }}"

  - name: (sas-smart) Match installed HDDs/SSDs against database
    become: True
    when: not mon_skip_smart
    shell: >
      /usr/lib/nagios/plugins/check_sas_smart
      -c {{ item }} > /dev/null &&
      (echo "{{ item }}" >> /tmp/disks)
    with_items: "{{ pdisks }}"
    changed_when: False
    failed_when: False
    check_mode: False

  - name: (sas-smart) Check if we detected any disks
    become: True
    when: not mon_skip_smart
    stat: path=/tmp/disks
    register: diskstat
    check_mode: False

  - name: (sas-smart) Load detection result
    become: True
    when: not mon_skip_smart and diskstat.stat.exists
    shell: cat /tmp/disks
    register: disks
    changed_when: False
    check_mode: False

  - name: (sas-smart) Detect disks
    when: not mon_skip_smart and diskstat.stat.exists
    set_fact:
      smart_item: "sas {{ item }}"
    with_items: "{{ disks.stdout_lines }}"
    register: smartappend

  - name: (sas-smart) Remove tempfile
    become: True
    when: not mon_skip_smart and diskstat.stat.exists
    file: path=/tmp/disks state=absent
    changed_when: False
    check_mode: False

  - name: (sas-smart) Append detected disks to list of checks
    when: not mon_skip_smart and diskstat.stat.exists
    set_fact: mon_icinga_checks="{{ mon_icinga_checks }} + {{ smartappend.results | map(attribute='ansible_facts.smart_item') | list | sort }}"
