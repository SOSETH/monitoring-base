---
  - name: Load physical disks in this system (by path)
    when: not mon_disks_use_uuid
    set_fact:
      pdisks: "{{ ansible_devices|attr_not_matching('removable', '^1')|keys|matching('[sva]d[a-z]')|prepend('/dev/') }}"

  - name: Load physical disks in this system (by uuid)
    when: mon_disks_use_uuid
    set_fact:
      pdisks: "{{ ansible_devices|attr_not_matching('removable', '^1')|keys|matching('[sva]d[a-z]')|map('extract', ansible_devices, 'links')|map(attribute='ids')|first_sub|prepend('/dev/disk/by-id/') }}"

  - name: (disk) Detect mounted volumes
    set_fact:
      disk_item: "disk {{ item.mount }}"
    with_items: "{{ ansible_mounts|attr_in('mount', mon_icinga_valid_mounts) }}"
    register: diskappend

  - name: (disk) Append detected mountpoints to list of checks
    set_fact: mon_icinga_checks="{{mon_icinga_checks}} + {{ diskappend.results | map(attribute='ansible_facts.disk_item') | list }}"

  - name: (iostat) Enumerate physical disks in this system
    set_fact:
      disk_item: "iostat {{ item }}"
    with_items: "{{ pdisks }}"
    register: pdiskappend

  - name: (iostat) Append detected disks to list of checks
    set_fact: mon_icinga_checks='{{mon_icinga_checks}} + {{ pdiskappend.results | map(attribute="ansible_facts.disk_item") | list }}'

  - name: (iostat) Install iostat check
    become: True
    when: not mon_skip_smart
    copy:
      src: "check_iostat"
      dest: "/usr/lib/nagios/plugins/check_iostat"
      owner: root
      group: root
      mode: 0755

  - name: (smart) Install dependencies
    become: True
    when: not mon_skip_smart
    apt: name={{ item }} state=present update_cache=yes cache_valid_time=1800
    with_items:
      - libswitch-perl
      - libjson-xs-perl
      - libtext-trim-perl
      - libtry-tiny-perl
      - libexception-class-perl
      - sudo
      - smartmontools

  - name: (smart) Install smart check
    become: True
    when: not mon_skip_smart
    copy:
      src: "check_smartvalues"
      dest: "/usr/lib/nagios/plugins/check_smartvalues"
      owner: root
      group: root
      mode: 0755

  - name: (smart) Install smart check config and db
    become: True
    when: not mon_skip_smart
    copy:
      src: "{{ item }}"
      dest: "/etc/icinga2/{{ item }}"
      owner: root
      group: nagios
      mode: 0644
    with_items:
      - check_smartvalues.cfg.json
      - check_smartvalues.db.json

  - name: (smart) Allow user nagios to execute smartctl with sudo
    become: True
    when: not mon_skip_smart
    lineinfile:
      dest: "/etc/sudoers"
      state: present
      regexp: '^nagios'
      line: 'nagios ALL=(ALL) NOPASSWD: /usr/sbin/smartctl, /usr/bin/ceph status --format json-pretty'

  - name: (smart) Remove tempfile
    become: True
    when: not mon_skip_smart
    file: path=/tmp/disks state=absent

  - name: (smart) Match installed HDDs/SSDs against database
    become: True
    when: not mon_skip_smart
    shell: >
      /usr/lib/nagios/plugins/check_smartvalues
      -db /etc/icinga2/check_smartvalues.db.json
      -c /etc/icinga2/check_smartvalues.cfg.json
      -pd -d {{ item }} | head -n1 | grep -P "^UNKNOWN" ||
      (echo "{{ item }}" >> /tmp/disks)
    with_items: "{{ pdisks }}"
    changed_when: False
    failed_when: False

  - name: (smart) Check if we detected any disks
    become: True
    when: not mon_skip_smart
    stat: path=/tmp/disks
    register: diskstat

  - name: (smart) Load detection result
    become: True
    when: not mon_skip_smart and diskstat.stat.exists
    shell: cat /tmp/disks
    register: disks
    changed_when: False

  - name: (smart) Detect disks
    when: not mon_skip_smart and diskstat.stat.exists
    set_fact:
      smart_item: "smart {{ item }}"
    with_items: "{{ disks.stdout_lines }}"
    register: smartappend

  - name: (smart) Remove tempfile
    become: True
    when: not mon_skip_smart
    file: path=/tmp/disks state=absent
    changed_when: False

  - name: (smart) Append detected disks to list of checks
    when: not mon_skip_smart and diskstat.stat.exists
    set_fact: mon_icinga_checks="{{mon_icinga_checks}} + {{ smartappend.results | map(attribute='ansible_facts.smart_item') | list }}"

  - name: (sas-smart) Install smart check
    become: True
    when: not mon_skip_smart
    copy:
      src: "check_sas_smart"
      dest: "/usr/lib/nagios/plugins/check_sas_smart"
      owner: root
      group: root
      mode: 0755

  - name: (sas-smart) Match installed HDDs/SSDs against database
    become: True
    when: not mon_skip_smart
    shell: >
      /usr/lib/nagios/plugins/check_sas_smart
      -c {{ item }} > /dev/null &&
      (echo "{{ item }}" >> /tmp/disks)
    with_items: "{{ pdisks }}"
    changed_when: False
    failed_when: False

  - name: (sas-smart) Check if we detected any disks
    become: True
    when: not mon_skip_smart
    stat: path=/tmp/disks
    register: diskstat

  - name: (sas-smart) Load detection result
    become: True
    when: not mon_skip_smart and diskstat.stat.exists
    shell: cat /tmp/disks
    register: disks
    changed_when: False

  - name: (sas-smart) Detect disks
    when: not mon_skip_smart and diskstat.stat.exists
    set_fact:
      smart_item: "sas {{ item }}"
    with_items: "{{ disks.stdout_lines }}"
    register: smartappend

  - name: (sas-smart) Remove tempfile
    become: True
    when: not mon_skip_smart and diskstat.stat.exists
    file: path=/tmp/disks state=absent
    changed_when: False

  - name: (sas-smart) Append detected disks to list of checks
    when: not mon_skip_smart and diskstat.stat.exists
    set_fact: mon_icinga_checks="{{ mon_icinga_checks }} + {{ smartappend.results | map(attribute='ansible_facts.smart_item') | list }}"
